from aiogram import F, Router
from aiogram.types import (
    Message,
)
from sqlalchemy.ext.asyncio import AsyncSession

from crud.roadmap import roadmap_crud
from models.models import User

status_point_router = Router()


@status_point_router.message(F.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Ç–æ—á–∫—É')
async def current_checkpoint_handler(
    message: Message,
    session: AsyncSession,
    user: User,
) -> None:
    """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Ç–æ—á–∫–∏."""
    roadmap = await roadmap_crud.get_user_roadmap(
        intern_id=user.id,
        session=session,
    )
    if not roadmap:
        await message.answer('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã.')
        return

    for point in roadmap.reference_points:
        if not point.is_completed and point.check_datetime:
            await message.answer(
                text=(
                    f'üü° <b>–¢–µ–∫—É—â–∏–π —à–∞–≥</b>\n\n'
                    f'üìå <b>–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞:</b> {roadmap.name}\n'
                    f'üîñ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Ç–æ—á–∫–∏:</b> {point.name}\n'
                    f'üìÇ <b>–¢–∏–ø:</b> {point.point_type}\n'
                    f'üìÖ <b>–û—Ç–∫—Ä—ã—Ç —Å:</b> {point.trigger_datetime}\n'
                    f'‚è≥ <b>–°—Ç–∞—Ç—É—Å:</b> –í –ø—Ä–æ—Ü–µ—Å—Å–µ\n'
                    f'üíÄ <b>–î–µ–¥–ª–∞–π–Ω:</b> {point.check_datetime}\n'
                ),
                parse_mode='HTML',
            )
            return
    await message.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —à–∞–≥–æ–≤.')
