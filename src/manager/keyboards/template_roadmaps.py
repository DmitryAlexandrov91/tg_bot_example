from typing import List

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from manager.callbacks import (
    ManagerStartCallback,
    ManagerTemplateRoadmapCallback,
)
from manager.constants import (
    BACK,
    BACK_TO_MENU,
)
from models.models import TemplateRoadMap


def select_templateroadmap_keyboard(
        templateroadmaps: List[TemplateRoadMap],
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –®–∞–±–ª–æ–Ω–∞ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã."""
    builder = InlineKeyboardBuilder()

    for templateroadmap in templateroadmaps:
        builder.button(
            text=(
                f'{templateroadmap.name}'
                f'{" (üîí)" if templateroadmap.is_blocked else ""}'
            ),
            callback_data=ManagerTemplateRoadmapCallback(
                templateroadmap_id=templateroadmap.id,
                action='select',
            ),
        )

    builder.button(
        text=BACK_TO_MENU,
        callback_data=ManagerStartCallback(
            action='back_to_menu',
        ),
    )

    builder.adjust(1)
    return builder.as_markup()


def get_templateroadmap_menu_keyboard(
        templateroadmap: TemplateRoadMap,
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –®–∞–±–ª–æ–Ω–æ–º –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã."""
    builder = InlineKeyboardBuilder()

    builder.button(
        text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –®–∞–±–ª–æ–Ω –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã',
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap.id,
            action='edit_templateroadmap',
        ),
    )

    builder.button(
        text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –®–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Ç–æ—á–µ–∫',
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap.id,
            action='templatereferencepoints_selector',
        ),
    )

    builder.button(
        text=BACK,
        callback_data=ManagerStartCallback(
            action='manager_templateroadmaps',
        ),
    )

    builder.button(
        text=BACK_TO_MENU,
        callback_data=ManagerStartCallback(
            action='back_to_menu',
        ),
    )

    builder.adjust(1)
    return builder.as_markup()


def get_templateroadmap_editor_menu_keyboard(
        templateroadmap: TemplateRoadMap,
        changes: bool = False,
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –†–µ–¥–∞–∫—Ç–æ—Ä–æ–º –î–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã."""
    builder = InlineKeyboardBuilder()

    if changes:
        builder.button(
            text='üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è',
            callback_data=ManagerTemplateRoadmapCallback(
                templateroadmap_id=templateroadmap.id,
                action='save_templateroadmap',
            ),
        )

    builder.button(
        text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ',
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap.id,
            action='edit_templateroadmap_name',
        ),
    )

    builder.button(
        text='–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ',
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap.id,
            action='edit_templateroadmap_description',
        ),
    )

    block_status = (
        'üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' if templateroadmap.is_blocked
        else 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'
    )
    builder.button(
        text=block_status,
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap.id,
            action='block_templateroadmap',
        ),
    )

    builder.button(
        text=BACK,
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap.id,
            action='show_unsaved_alert' if changes else 'select',
        ),
    )

    builder.button(
        text=BACK_TO_MENU,
        callback_data=ManagerStartCallback(
            action='show_unsaved_alert' if changes else 'back_to_menu',
        ),
    )

    builder.adjust(1)
    return builder.as_markup()


def templateroadmap_editor_cancel_keyboard(
        templateroadmap_id: int,
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –†–µ–¥–∞–∫—Ç–æ—Ä–æ–º –î–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã."""
    builder = InlineKeyboardBuilder()

    builder.button(
        text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',
        callback_data=ManagerTemplateRoadmapCallback(
            templateroadmap_id=templateroadmap_id,
            action='edit_templateroadmap',
        ),
    )

    builder.adjust(1)
    return builder.as_markup()
